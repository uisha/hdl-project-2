$date
	Tue Jul 25 12:42:23 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module struct_tb $end
$var wire 1 ! t_F $end
$var reg 4 " t_input [3:0] $end
$var integer 32 # i [31:0] $end
$scope module dut $end
$var wire 1 $ A $end
$var wire 1 % B $end
$var wire 1 & C $end
$var wire 1 ' D $end
$var wire 1 ! F $end
$var wire 1 ( en $end
$var wire 4 ) w [3:0] $end
$var wire 4 * d4 [3:0] $end
$var wire 4 + d3 [3:0] $end
$var wire 4 , d2 [3:0] $end
$var wire 4 - d1 [3:0] $end
$scope module G1 $end
$var wire 1 ( EN $end
$var wire 2 . in [1:0] $end
$var reg 4 / out [3:0] $end
$upscope $end
$scope module G2 $end
$var wire 1 0 EN $end
$var wire 2 1 in [1:0] $end
$var reg 4 2 out [3:0] $end
$upscope $end
$scope module G3 $end
$var wire 1 3 EN $end
$var wire 2 4 in [1:0] $end
$var reg 4 5 out [3:0] $end
$upscope $end
$scope module G4 $end
$var wire 1 6 EN $end
$var wire 2 7 in [1:0] $end
$var reg 4 8 out [3:0] $end
$upscope $end
$scope module G5 $end
$var wire 1 9 EN $end
$var wire 2 : in [1:0] $end
$var reg 4 ; out [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 ;
b0 :
19
b1000 8
b0 7
06
b1000 5
b0 4
03
b1000 2
b0 1
00
b1000 /
b0 .
b1000 -
b1000 ,
b1000 +
b0 *
b1000 )
0(
0'
0&
0%
0$
b1 #
b0 "
1!
$end
#50000
b100 -
b100 2
b100 ,
b100 5
b100 +
b100 8
b1 1
b1 4
b1 7
b1 :
1'
b10 #
b1 "
#100000
b10 -
b10 2
b10 ,
b10 5
b10 +
b10 8
1&
b10 1
b10 4
b10 7
b10 :
0'
b11 #
b10 "
#150000
b1 -
b1 2
b1 ,
b1 5
b1 +
b1 8
b11 1
b11 4
b11 7
b11 :
1'
b100 #
b11 "
#200000
1!
b1000 *
b1000 ;
09
16
b100 )
b100 /
b1000 -
b1000 2
b1000 ,
b1000 5
b0 +
b0 8
b1 .
1%
0&
b0 1
b0 4
b0 7
b0 :
0'
b101 #
b100 "
#250000
b100 -
b100 2
b100 ,
b100 5
b100 *
b100 ;
b1 1
b1 4
b1 7
b1 :
1'
b110 #
b101 "
#300000
b10 -
b10 2
b10 ,
b10 5
b10 *
b10 ;
1&
b10 1
b10 4
b10 7
b10 :
0'
b111 #
b110 "
#350000
0!
b1 -
b1 2
b1 ,
b1 5
b1 *
b1 ;
b11 1
b11 4
b11 7
b11 :
1'
b1000 #
b111 "
#400000
1!
b1000 +
b1000 8
06
13
b10 )
b10 /
b1000 -
b1000 2
b0 ,
b0 5
b1000 *
b1000 ;
1$
b10 .
0%
0&
b0 1
b0 4
b0 7
b0 :
0'
b1001 #
b1000 "
#450000
b100 -
b100 2
b100 +
b100 8
b100 *
b100 ;
b1 1
b1 4
b1 7
b1 :
1'
b1010 #
b1001 "
#500000
0!
b10 -
b10 2
b10 +
b10 8
b10 *
b10 ;
1&
b10 1
b10 4
b10 7
b10 :
0'
b1011 #
b1010 "
#550000
1!
b1 -
b1 2
b1 +
b1 8
b1 *
b1 ;
b11 1
b11 4
b11 7
b11 :
1'
b1100 #
b1011 "
#600000
b1000 ,
b1000 5
03
10
b1 )
b1 /
b0 -
b0 2
b1000 +
b1000 8
b1000 *
b1000 ;
b11 .
1%
0&
b0 1
b0 4
b0 7
b0 :
0'
b1101 #
b1100 "
#650000
b100 ,
b100 5
b100 +
b100 8
b100 *
b100 ;
b1 1
b1 4
b1 7
b1 :
1'
b1110 #
b1101 "
#700000
b10 ,
b10 5
b10 +
b10 8
b10 *
b10 ;
1&
b10 1
b10 4
b10 7
b10 :
0'
b1111 #
b1110 "
#750000
b1 ,
b1 5
b1 +
b1 8
b1 *
b1 ;
b11 1
b11 4
b11 7
b11 :
1'
b10000 #
b1111 "
